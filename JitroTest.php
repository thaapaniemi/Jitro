<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-07 at 06:41:45.
 */
class JitroTest extends PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    protected function emptyArrays(){
    	$_GET = array();
    	$_POST = array();
    	$_REQUES = array();
    	$_COOKIE = array();
    	$_SESSION = array();
    	$_FILES = array();
    }

    protected function setArray($target, $newArray){
    	switch ($target) {
    		case 'GET':
    			$_GET = $newArray;
    			break;
    		case 'POST':
    			$_POST = $newArray;
    			break;
    		case 'REQUEST':
    			$_REQUEST = $newArray;
    			break;
    		case 'SESSION':
    			$_SESSION = $newArray;
    			break;
    		case 'COOKIE':
    			$_COOKIE = $newArray;
    			break;
    		case 'FILES':
    			$_FILES = $newArray;
    			break;
    		
    		default:
    			throw new Exception("JitroTest:setArray::Error Processing Request", 1);
    			break;
    	}
    }

    /**
     * @covers Jitro::AddKey
     * @todo   Implement testAddKey().
     */
    public function testAddOKKey()
    {
    	Jitro::Clear();
        $this->emptyArrays();
        
        $targets = array("GET","POST","REQUEST","SESSION","COOKIE", "FILES");
        $keys = array("a"=>"z","b"=>"3","c"=>"x","d"=>"w","e"=>"v");


    	foreach ($targets as $key0 => $target) {
    		$this->emptyArrays();
			$this->setArray($target,$keys);

    		foreach ($keys as $key => $value) {
    			Jitro::Clear();
    			Jitro::AddKey($key,array($value),$target);
    			$this->AssertTrue( Jitro::IsValid($key) );
    		}
    	}

    	Jitro::Clear();
		$keys = array("a"=>"z","b"=>"y","c"=>NULL,"d"=>"w","e"=>4);

    	foreach ($targets as $key0 => $target) {
    		$this->emptyArrays();
			$this->setArray($target,$keys);
    		foreach ($keys as $key => $value) {
				Jitro::Clear();
				Jitro::AddKey($key,array("ALL"),$target);

				$this->AssertTrue( Jitro::IsValid($key) );
    		}
    	}

    	Jitro::Clear();
		$keys = array("a"=>"z","b"=>"y","c"=>3,"d"=>"w","e"=>4);

    	foreach ($targets as $key0 => $target) {
    		$this->emptyArrays();
			$this->setArray($target,$keys);
    		foreach ($keys as $key => $value) {
				Jitro::Clear();
				Jitro::AddKey($key,array("NOTEMPTY"),$target);
				$this->AssertTrue( Jitro::IsValid($key) );
    		}
    	}

    	Jitro::Clear();
    	$keys = array("a"=>"z","b"=>"y","c"=>NULL,"d"=>"w","e"=>4);
    	foreach ($targets as $key0 => $target) {
    		$this->emptyArrays();
			$this->setArray($target,$keys);
			
			Jitro::AddKey("c",array("NOTEMPTY"),$target);
			$this->AssertFalse( Jitro::IsValid("c") );
		}


    }

    /**
     * @covers Jitro::Get
     * @expectedException JitroException
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        Jitro::Clear();
        $_POST = array("a"=>"b","b"=>2, "c"=>NULL);


        Jitro::AddKey("a",array("ALL"));
        Jitro::AddKey("b",array(2));
        Jitro::AddKey("c",array("NOTEMPTY"));

        $this->assertEquals("b", Jitro::Get('a'));
        $this->assertEquals(2, Jitro::Get('b'));
        Jitro::Get('c');

    }

    /**
     * @covers Jitro::GetValidatedKeys
     * @todo   Implement testGetValidatedKeys().
     */
    public function testGetValidatedKeys()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Jitro::GetIgnoredKeys
     * @todo   Implement testGetIgnoredKeys().
     */
    public function testGetIgnoredKeys()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Jitro::Authenticate
     * @todo   Implement testAuthenticate().
     */
    public function testAuthenticate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
